name: .NET
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
 analyze:
  name: Analyze
  runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
  timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
  permissions:
      actions: read
      contents: read
      security-events: write
  strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3 
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}         
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
 build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
           dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore 
      - name: Publish
        run: dotnet publish -c Release -o "C:\actions-runner\published"           
      - name: delete_files  
        run:  Remove-Item "d:\githubdeploy\*"  
      - name: copy_file  
        run:  Copy-Item "C:\actions-runner\published\*" -Destination "d:\githubdeploy"
 release:
    name: Release pushed tag
    runs-on: ubuntu-22.04
    steps:         
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes
